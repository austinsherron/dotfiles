{{- if eq .chezmoi.os "darwin" -}}
#!/usr/bin/env bash

set -Eeuo pipefail

source /etc/profile.d/shared_paths.sh


{{ template "validate-deps.tmpl" (list "brew") }}

{{ template "version-check.tmpl" (merge . (dict "type" "darwin")) }}

{{- range $tap := .packages.darwin.brew.taps }}
brew tap {{ $tap }}
{{- end }}

echo "[INFO] installing brew formulae"

{{- range $formula := .packages.darwin.brew.formulae }}
brew list {{ $formula }} &> /dev/null || brew install {{ $formula }}
{{- end }}

echo "[INFO] installing brew casks"

{{- range $cask := .packages.darwin.brew.casks }}
brew list {{ $cask }} --cask &> /dev/null || brew install {{ $cask }} --cask
{{- end }}

echo "[INFO] installing from scripts"

{{- range $script := .packages.darwin.scripts }}
# assume the script is os specific
SCRIPT_PATH="${SCRIPTS_ROOT}/install/{{ $.chezmoi.os }}/{{ $script.name }}.sh"
# but if the os specific path doesn't exist, it may be an os-agnostic script
[[ ! -f "${SCRIPT_PATH}" ]] && SCRIPT_PATH="${SCRIPTS_ROOT}/install/generic/{{ $script.name }}.sh"
# if that doesn't exist, fail
[[ ! -f "${SCRIPT_PATH}" ]] && echo "[ERROR] the script ${SCRIPT_PATH} doesn't exist" && exit 1
"${SCRIPT_PATH}" {{ dig "args" list $script | join " " }}
{{- end }}

# NOTE: at the time of writing, go packages must be installed after scripts due to
# dependency on gvm

echo "[INFO] installing go packages"

{{- range $pkg := .packages.darwin.go }}
which "{{ $pkg.name }}" > /dev/null || go install "{{ $pkg.url }}@{{ $pkg.version }}"
{{- end }}

{{- end }}
